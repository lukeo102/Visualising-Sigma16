
; p := &x[0]
; q := p + n
; while p < q do
;   *p := *p * *p
;    p : = p + 1

;       p := &x[0]
;       q := p + n
;start  if not(p < q) goto done
;      *p := *p * *p
;       p : = p + 1
;       goto start
;done

; R1 := p
; R2 := n
; R3 := x[i]
; R4 := q


         lea      R1,x[R0]          ;R1 := &x[0] = p
         load     R2,n[R0]          ;R2 := n
         add      R4,R1,R2          ;R4 := p + n = q
start    cmp      R1,R4             ;compare p and q
         jumpge   done[R0]          ;if i >= n goto done
         load     R3,0[R1]          ;R3 := *p (x[i])
         mul      R3,R3,R3          ;R3 := *p * *p (x[i] * x[i])
         store    R3,0[R1]          ;*p := *p * *p (x[i] := x[i] * x[i])
         lea      R1,1[R1]          ;p : = p + 1
         jump     start[R0]         ;goto start
done     trap     R0,R0,R0          ;terminate
x    data   7
     data   5
     data   2
     data   4
     data   3
n    data   5